First, introduce yourself with the following ice breaker questions:

	* What's your name and why are you here?
		* Oliver Guhr, HTW Dresden, co-chair, teaching ML and NLP
		* Carola Gajek, Uni Augsburg
		* Katherine Kinnaird, Smith College (Northampton MA, USA)
		* Hussain Kazmi, KU Leuven
		* Cornelia Gamst, KI-Campus
	* What’s your number one tip for combating distractions when working from home?
		* "How to Salvage a Disastrous Day in Your Covid-19 House Arrest" - https://community.chronicle.com/news/2339-how-to-salvage-a-disastrous-day-in-your-covid-19-house-arrest
	* What’s the best piece of advice you’ve ever been given?
	* Collect advisors like you collect playing cards.



	1. What open resources do exist?
		2. non technical overview of AI https://course.elementsofai.com/ (will be extended)
		2. CS224n: Natural Language Processing with Deep Learning - http://web.stanford.edu/class/cs224n/
		2. CS231n: Convolutional Neural Networks for Visual Recognition http://cs231n.stanford.edu/
		2. https://www.deeplearningbook.org/
		2. https://d2l.ai/ Dive into Deep Learning
		2. https://datasciencebox.org/
		2. https://www.fast.ai/
		2. We love: 3 blue 1 brown https://www.youtube.com/channel/UCYO_jab_esuFRV4b17AJtAw
		2. From Neural Network introduction, backpropagation to deep learning calculus  -> https://www.youtube.com/playlist?list=PLZHQObOWTQDNU6R1_67000Dx_ZCJB-3pi
		2. The Turing Way https://the-turing-way.netlify.app/welcome
		2. list all the open materials from workshop participants
			3. Computational Machine Learning (without statistics) - https://github.com/comp-machine-learning-general/course-materials
			3. https://github.com/isse-augsburg/ecml2020-teach-ml
			3. Interactive Decision Tree Learning https://ml.isse.de/dt/
			3. LMU Introduction to ML: https://compstat-lmu.github.io/lecture_i2ml/index.html 
			3. https://huppenkothen.org/machine-learning-tutorial/
			3. ... 
		2. How do you find open resources?
			3. Do you know a good search engine? -> google :)
			3. Only by recommendation of colleagues or on conferences?
			3. Journal of Open Source Education https://jose.theoj.org/
			3. Sharing network jointly creating Jupyter Notebooks
			3. Including a conference once a year
			3. TWITTER
			3. Towards Data Science
			3. Reddit
			3. Repo initilized over twitter with DataCamp alternatives: https://github.com/Chris-Engelhardt/data_sci_guide
				4. all DataCamp lesson alternatives gathered here: https://docs.google.com/spreadsheets/d/1LtaeWPzEhRiy-kdNZBn0gPwc6aTYkWtt6Cau6PzcXuo/edit#gid=0
			3. 
		2. How do you use someone else's open resources for your course?
			3. Reuse Notbooks, use images / explanations 
			3. Adapt exercises to your student target group
	1. What stops the participants in the workshop from making their material available?
		2. Funding agency requirements
		2. Who owns the IP for materials?
		2. Insecurities about material's quality.
		2. Tip: put all used materials at the bottom (for transparency, but also for students to see what went into the creation of materials)
	1. What are your experiences with open educational resources?
		2. Hard to find a good Python introduction for beginners. Tips are welcome :) 
			3. Do you know the OpenTechSchool materials? http://opentechschool.github.io/python-beginnPyers/
			3. Or the Coursera classic from U Michigan (also available outside Coursera)? https://online.umich.edu/courses/programming-for-everybody-getting-started-with-python/
			3. "How to Think Like a Computer Scientist: Interactive Edition" - https://runestone.academy/runestone/books/published/thinkcspy/index.html
			3. No longer open - "Python the Hard way" - https://shop.learncodethehardway.org/access/buy/9/
			3. Jupyter Notebooks for introductory Python https://github.com/CambridgeEngineering/PartIA-Computing-Michaelmas
		2. More OpenTechSchool materials: https://learn.opentechschool.org/ 
	1. Additional resources - and tips
		2. "Todxs cuentan: building community and welcoming humanity from the first day of class." by Federico Ardila–Mantilla - https://arxiv.org/pdf/2008.02835.pdf
		2. Jupyter Notebook spell checking add-on
		2. Spellchecker and language styling -> https://grammarly.com/ (not open, but has a free version)
		2. Take it to twitter for inspiration! ;) 
		2. Jupyter Books: https://jupyterbook.org/intro.html
		2. Github Classroom https://classroom.github.com/ 
		2. nb grader: Jupyter Notebook auto-grader
			3. or: Unit Testing with Travis
		2. Open Source Slack alternatives for asynchronous communication: Mattermost, Rocketchat, Discord (not open source!)
			3. https://mattermost.com/
			3. https://rocket.chat/
			3. https://discord.com/ (not open source!)

